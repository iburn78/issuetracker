USER TIER: 
- Issuetracker Citizen: entry level user
- VIP: no specific privilage assigned (need to be implemented)
    * E.g., no limit in number of cards... 
    * E.g., right to write in any public cards... etc...
- Public Card Manager: manages public cards / can delete comments, replies
- Staff / Superuser: no specific privilage assigned

- Official/Public card status cannot be changed (implemented)

- write posts (implemented)
  - official cards: public card managers can write posts
  - public cards: anybody
  - private cards: only owner can write posts

- delete / edit posts (implemented)
  - author can modify/delete own posts
  - public/official cards: owner can also modify/delete post 
  note: if a card is deleted, test_func() in post_view() is not called -> all posts are deleted regardless of authors

- card order change (implemented)
  - public card managers can change orders of cards



-------------
To implement:
-------------
- comment system implement
- keyword search (refer to previous implement)
- author / tag / mylikes search
- improve new post / update post page with better design
- image close-up page revise
- apply ajax to everywhere possible (comments, etc...)
- move likes to upward and look for other imoticons
- android back-button: may need to override (maybe pretty easy... ) / to prevent card_content page close...
- there might be models.ForeignKey performance issues with too many options... may need to limit options



-------------
To fix:
-------------
- devise comment model: simple(youtube, chosun) vs complex(Quora) -> determine my own model
- to make reply comments
- to make like/dislikes in comments
- comments -> make supersuer or staff can delete comments (now only author can...)
- limit max-lines(max-length) in a comment (at least when shown)
- make report button (refer to other sites)



-------------
To revisit: (maybe no major issues)
-------------
- if html tags are inserted in comments, it may not work well with edit/cancel javascript functions (<pre> tag)
- improve comment model so that it may include reply_to_reply_author field (so that it can have style) 
- if html tags are inserterd in post content, it may not work well with get_preview_text... need to check
- model.textField -> set max lengths across POST, Comment models.... (think if necessary)
- sometimes, system navigates to .../? -> maybe something to do with XHR (ajax request)? -> Empty Form on GET request might be the possible scenario


